import { NextRequest, NextResponse } from "next/server";
import { connectMongoDB } from "@/lib/mongodb";
import CustomerInsurance from "@/models/CustomerInsurance";
import InsuranceRequest from "@/models/InsuranceRequest";

export async function POST(req: NextRequest) {
  try {
    await connectMongoDB();
    const body = await req.json();

    const { policy_number, firstName, lastName, user_id } = body;

    if (!policy_number || !firstName || !lastName || !user_id) {
      return NextResponse.json({ message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö" }, { status: 400 });
    }

    console.log("üîé Incoming verify:", { policy_number, firstName, lastName });

    const insurance = await CustomerInsurance.findOne({
      policy_number,
      firstName: { $regex: `^${firstName.trim()}$`, $options: "i" },
      lastName: { $regex: `^${lastName.trim()}$`, $options: "i" },
    });


    if (!insurance) {
      return NextResponse.json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô" }, { status: 404 });
    }

    const existingRequest = await InsuranceRequest.findOne({
      policy_number,
      user_id,
    });

    if (existingRequest) {
      return NextResponse.json({ message: "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" }, { status: 400 });
    }

    await InsuranceRequest.create({
      policy_number,
      user_id,
      firstName,
      lastName,
      status: "pending",
    });
    
    

    return NextResponse.json({ message: "‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" });
  } catch (error) {
    console.error("‚ùå Error while submitting insurance request:", error);
    return NextResponse.json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", error }, { status: 500 });
  }
}
